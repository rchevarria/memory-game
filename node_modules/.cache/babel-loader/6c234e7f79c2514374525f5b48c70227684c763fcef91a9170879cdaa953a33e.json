{"ast":null,"code":"var _jsxFileName = \"/Users/ryanchevarria/Desktop/memory-game/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState } from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [{\n  \"src\": \"img/tnt.png\"\n},\n//path to images\n{\n  \"src\": \"img/furnace.png\"\n}, {\n  \"src\": \"img/creeper.png\"\n}, {\n  \"src\": \"img/sword.png\"\n}, {\n  \"src\": \"img/craft.png\"\n}, {\n  \"src\": \"img/steve.png\"\n}];\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [firstChoice, setChoiceOne] = useState(null);\n  const [secondChoice, setChoiceTwo] = useState(null);\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages].sort(() => Math.random() - 0.5).map(card => ({\n      ...card,\n      id: Math.random()\n    })); //shuffling cards and giving them an ID\n\n    setCards(shuffledCards);\n    setTurns(0);\n  };\n  console.log(cards, turns);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Minecraft Memory Game \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"start-button\", {\n      onClick: shuffleCards,\n      children: \" New Game \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        card: card\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 32\n      }, this) //prop\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 12\n  }, this);\n}\n_s(App, \"8Z1XGGzF9UvLEOPqcmRNn0xeAn8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Card","cardImages","App","cards","setCards","turns","setTurns","firstChoice","setChoiceOne","secondChoice","setChoiceTwo","shuffleCards","shuffledCards","sort","Math","random","map","card","id","console","log"],"sources":["/Users/ryanchevarria/Desktop/memory-game/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState } from 'react'\nimport Card from './Card'\n\nconst cardImages = [\n    {\"src\": \"img/tnt.png\"},         //path to images\n    {\"src\": \"img/furnace.png\"},\n    {\"src\": \"img/creeper.png\"},\n    {\"src\": \"img/sword.png\"},\n    {\"src\": \"img/craft.png\"},\n    {\"src\": \"img/steve.png\"}\n]\n\nfunction App() {\n    \n    const [cards, setCards] = useState([])\n    const [turns, setTurns] = useState(0)\n    \n    const [firstChoice, setChoiceOne] = useState(null)\n    const [secondChoice, setChoiceTwo] = useState(null)\n    \n    const shuffleCards = () => {\n        const shuffledCards = [...cardImages, ...cardImages]\n        .sort(() => Math.random() - 0.5)\n        .map((card) => ({...card, id: Math.random() })) //shuffling cards and giving them an ID\n        \n        setCards(shuffledCards)\n        setTurns(0)\n    }\n    console.log(cards, turns)\n    \n  \n    \n    return(\n           <div className=\"App\">\n             <h1> Minecraft Memory Game </h1>\n           <start-button onClick={shuffleCards}> New Game </start-button>\n           \n           <div className=\"card-grid\">\n           {cards.map(card => (\n                               <Card key={card.id} card={card} /> //prop\n            ))}\n           </div>\n           \n           </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,QAAQ;AAAA;AAEzB,MAAMC,UAAU,GAAG,CACf;EAAC,KAAK,EAAE;AAAa,CAAC;AAAU;AAChC;EAAC,KAAK,EAAE;AAAiB,CAAC,EAC1B;EAAC,KAAK,EAAE;AAAiB,CAAC,EAC1B;EAAC,KAAK,EAAE;AAAe,CAAC,EACxB;EAAC,KAAK,EAAE;AAAe,CAAC,EACxB;EAAC,KAAK,EAAE;AAAe,CAAC,CAC3B;AAED,SAASC,GAAG,GAAG;EAAA;EAEX,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAM,CAACQ,WAAW,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACU,YAAY,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEnD,MAAMY,YAAY,GAAG,MAAM;IACvB,MAAMC,aAAa,GAAG,CAAC,GAAGX,UAAU,EAAE,GAAGA,UAAU,CAAC,CACnDY,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,CAAC,CAC/BC,GAAG,CAAEC,IAAI,KAAM;MAAC,GAAGA,IAAI;MAAEC,EAAE,EAAEJ,IAAI,CAACC,MAAM;IAAG,CAAC,CAAC,CAAC,EAAC;;IAEhDX,QAAQ,CAACQ,aAAa,CAAC;IACvBN,QAAQ,CAAC,CAAC,CAAC;EACf,CAAC;EACDa,OAAO,CAACC,GAAG,CAACjB,KAAK,EAAEE,KAAK,CAAC;EAIzB,oBACO;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgC,eAClC;MAAc,OAAO,EAAEM,YAAa;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA0B,eAE9D;MAAK,SAAS,EAAC,WAAW;MAAA,UACzBR,KAAK,CAACa,GAAG,CAACC,IAAI,iBACK,QAAC,IAAI;QAAe,IAAI,EAAEA;MAAK,GAApBA,IAAI,CAACC,EAAE;QAAA;QAAA;QAAA;MAAA,QAAgB,CAAC;MACrD;IAAC;MAAA;MAAA;MAAA;IAAA,QACG;EAAA;IAAA;IAAA;IAAA;EAAA,QAEA;AAEjB;AAAC,GAjCQhB,GAAG;AAAA,KAAHA,GAAG;AAmCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}