{"ast":null,"code":"var _jsxFileName = \"/Users/ryanchevarria/Desktop/memory-game/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [{\n  \"src\": \"img/tnt.png\",\n  matched: false\n},\n//path to images\n{\n  \"src\": \"img/furnace.png\",\n  matched: false\n}, {\n  \"src\": \"img/creeper.png\",\n  matched: false\n}, {\n  \"src\": \"img/sword.png\",\n  matched: false\n}, {\n  \"src\": \"img/craft.png\",\n  matched: false\n}, {\n  \"src\": \"img/steve.png\",\n  matched: false\n}];\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [firstChoice, setChoiceOne] = useState(null);\n  const [secondChoice, setChoiceTwo] = useState(null);\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages].sort(() => Math.random() - 0.5).map(card => ({\n      ...card,\n      id: Math.random()\n    })); //shuffling cards and giving them an ID\n\n    setCards(shuffledCards);\n    setTurns(0);\n  };\n\n  //handling user choice\n\n  const handleChoice = card => {\n    firstChoice ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  //Compare the selected cards\n\n  useEffect(() => {\n    if (firstChoice && secondChoice) {\n      if (firstChoice.src === secondChoice.src) {\n        console.log(\"those cards match\");\n        reset();\n      } else {\n        console.log(\"NO MATCH\");\n        reset();\n      }\n    }\n  }, [firstChoice, secondChoice]);\n\n  //reset choices and increases turns\n  const reset = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Minecraft Memory Game \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"start-button\", {\n      onClick: shuffleCards,\n      children: \" New Game \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        card: card,\n        handleChoice: handleChoice\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"llbv1Ser/WAKwx0giUkWNQuVwnQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Card","cardImages","matched","App","cards","setCards","turns","setTurns","firstChoice","setChoiceOne","secondChoice","setChoiceTwo","shuffleCards","shuffledCards","sort","Math","random","map","card","id","handleChoice","src","console","log","reset"],"sources":["/Users/ryanchevarria/Desktop/memory-game/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react'\nimport Card from './Card'\n\nconst cardImages = [\n    {\"src\": \"img/tnt.png\", matched: false},         //path to images\n    {\"src\": \"img/furnace.png\", matched: false},\n    {\"src\": \"img/creeper.png\", matched: false},\n    {\"src\": \"img/sword.png\", matched: false},\n    {\"src\": \"img/craft.png\", matched: false},\n    {\"src\": \"img/steve.png\", matched: false}\n]\n\nfunction App() {\n    \n    const [cards, setCards] = useState([])\n    const [turns, setTurns] = useState(0)\n    \n    const [firstChoice, setChoiceOne] = useState(null)\n    const [secondChoice, setChoiceTwo] = useState(null)\n    \n    const shuffleCards = () => {\n        const shuffledCards = [...cardImages, ...cardImages]\n        .sort(() => Math.random() - 0.5)\n        .map((card) => ({...card, id: Math.random() })) //shuffling cards and giving them an ID\n        \n        setCards(shuffledCards)\n        setTurns(0)\n    }\n    \n    //handling user choice\n    \n    const handleChoice = (card) => {\n        firstChoice ? setChoiceTwo(card) : setChoiceOne(card)\n    }\n\n    //Compare the selected cards\n    \n    useEffect(() => {\n        if(firstChoice && secondChoice){\n            \n            if(firstChoice.src === secondChoice.src){\n                console.log(\"those cards match\")\n                reset()\n            }\n            else{\n                console.log(\"NO MATCH\")\n                reset()\n            }\n        }\n    }, [firstChoice, secondChoice])\n    \n    //reset choices and increases turns\n    const reset = () => {\n        setChoiceOne(null)\n        setChoiceTwo(null)\n    }\n  \n    \n    return(\n        <div className=\"App\">\n             <h1> Minecraft Memory Game </h1>\n             <start-button onClick={shuffleCards}> New Game </start-button>\n           \n           <div className=\"card-grid\">\n                {cards.map(card => (\n                    <Card\n                        key={card.id}\n                        card={card}\n                        handleChoice = {handleChoice}\n                    />\n            ))}\n           </div>\n           \n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,QAAQ;AAAA;AAEzB,MAAMC,UAAU,GAAG,CACf;EAAC,KAAK,EAAE,aAAa;EAAEC,OAAO,EAAE;AAAK,CAAC;AAAU;AAChD;EAAC,KAAK,EAAE,iBAAiB;EAAEA,OAAO,EAAE;AAAK,CAAC,EAC1C;EAAC,KAAK,EAAE,iBAAiB;EAAEA,OAAO,EAAE;AAAK,CAAC,EAC1C;EAAC,KAAK,EAAE,eAAe;EAAEA,OAAO,EAAE;AAAK,CAAC,EACxC;EAAC,KAAK,EAAE,eAAe;EAAEA,OAAO,EAAE;AAAK,CAAC,EACxC;EAAC,KAAK,EAAE,eAAe;EAAEA,OAAO,EAAE;AAAK,CAAC,CAC3C;AAED,SAASC,GAAG,GAAG;EAAA;EAEX,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAM,CAACU,WAAW,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACY,YAAY,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEnD,MAAMc,YAAY,GAAG,MAAM;IACvB,MAAMC,aAAa,GAAG,CAAC,GAAGZ,UAAU,EAAE,GAAGA,UAAU,CAAC,CACnDa,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,CAAC,CAC/BC,GAAG,CAAEC,IAAI,KAAM;MAAC,GAAGA,IAAI;MAAEC,EAAE,EAAEJ,IAAI,CAACC,MAAM;IAAG,CAAC,CAAC,CAAC,EAAC;;IAEhDX,QAAQ,CAACQ,aAAa,CAAC;IACvBN,QAAQ,CAAC,CAAC,CAAC;EACf,CAAC;;EAED;;EAEA,MAAMa,YAAY,GAAIF,IAAI,IAAK;IAC3BV,WAAW,GAAGG,YAAY,CAACO,IAAI,CAAC,GAAGT,YAAY,CAACS,IAAI,CAAC;EACzD,CAAC;;EAED;;EAEAnB,SAAS,CAAC,MAAM;IACZ,IAAGS,WAAW,IAAIE,YAAY,EAAC;MAE3B,IAAGF,WAAW,CAACa,GAAG,KAAKX,YAAY,CAACW,GAAG,EAAC;QACpCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAChCC,KAAK,EAAE;MACX,CAAC,MACG;QACAF,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;QACvBC,KAAK,EAAE;MACX;IACJ;EACJ,CAAC,EAAE,CAAChB,WAAW,EAAEE,YAAY,CAAC,CAAC;;EAE/B;EACA,MAAMc,KAAK,GAAG,MAAM;IAChBf,YAAY,CAAC,IAAI,CAAC;IAClBE,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAGD,oBACI;IAAK,SAAS,EAAC,KAAK;IAAA,wBACf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgC,eAChC;MAAc,OAAO,EAAEC,YAAa;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA0B,eAEhE;MAAK,SAAS,EAAC,WAAW;MAAA,UACpBR,KAAK,CAACa,GAAG,CAACC,IAAI,iBACX,QAAC,IAAI;QAED,IAAI,EAAEA,IAAK;QACX,YAAY,EAAIE;MAAa,GAFxBF,IAAI,CAACC,EAAE;QAAA;QAAA;QAAA;MAAA,QAIvB;IAAC;MAAA;MAAA;MAAA;IAAA,QACG;EAAA;IAAA;IAAA;IAAA;EAAA,QAEH;AAEd;AAAC,GA/DQhB,GAAG;AAAA,KAAHA,GAAG;AAiEZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}