[{"/Users/ryanchevarria/Desktop/memory-game/src/index.js":"1","/Users/ryanchevarria/Desktop/memory-game/src/App.js":"2","/Users/ryanchevarria/Desktop/memory-game/src/Card.js":"3"},{"size":226,"mtime":1668454488572,"results":"4","hashOfConfig":"5"},{"size":2468,"mtime":1668459579469,"results":"6","hashOfConfig":"5"},{"size":577,"mtime":1668457012149,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"agkjnq",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ryanchevarria/Desktop/memory-game/src/index.js",[],[],"/Users/ryanchevarria/Desktop/memory-game/src/App.js",["18","19"],[],"import './App.css';\nimport { useState, useEffect } from 'react'\nimport Card from './Card'\n\nconst cardImages = [\n    {\"src\": \"img/tnt.png\", matched: false},         //path to images\n    {\"src\": \"img/furnace.png\", matched: false},\n    {\"src\": \"img/creeper.png\", matched: false},\n    {\"src\": \"img/sword.png\", matched: false},\n    {\"src\": \"img/craft.png\", matched: false},\n    {\"src\": \"img/steve.png\", matched: false}\n]\n\nfunction App() {\n    \n    const [cards, setCards] = useState([])\n    const [turns, setTurns] = useState(0)\n    \n    const [firstChoice, setChoiceOne] = useState(null)\n    const [secondChoice, setChoiceTwo] = useState(null)\n    \n    const shuffleCards = () => {\n        const shuffledCards = [...cardImages, ...cardImages]\n        .sort(() => Math.random() - 0.5)\n        .map((card) => ({...card, id: Math.random() })) //shuffling cards and giving them an ID\n        \n        setCards(shuffledCards)\n        setTurns(0)\n    }\n    \n    //handling user choice\n    \n    const handleChoice = (card) => {\n        firstChoice ? setChoiceTwo(card) : setChoiceOne(card)\n    }\n\n    //Compare the selected cards\n    \n    useEffect(() => {\n        if(firstChoice && secondChoice){\n            \n            if(firstChoice.src === secondChoice.src){\n                setCards(prevCards => {\n                    return prevCards.map(card => {\n                        if(card.src == firstChoice.src){\n                            return {...card, matched: true}\n                        }else{\n                            return card\n                        }\n                    })\n                })\n                reset()\n            }\n            else{\n                console.log(\"NO MATCH\")\n                reset()\n            }\n        }\n    }, [firstChoice, secondChoice])\n    \n    console.log(cards)\n    \n    //reset choices and increases turns\n    const reset = () => {\n        setChoiceOne(null)\n        setChoiceTwo(null)\n    }\n  \n    \n    return(\n        <div className=\"App\">\n             <h1> Minecraft Memory Game </h1>\n             <start-button onClick={shuffleCards}> New Game </start-button>\n           \n           <div className=\"card-grid\">\n                {cards.map(card => (\n                    <Card\n                        key={card.id}\n                        card={card}\n                        handleChoice = {handleChoice}\n                    />\n            ))}\n           </div>\n           \n        </div>\n    );\n}\n\nexport default App;\n","/Users/ryanchevarria/Desktop/memory-game/src/Card.js",[],[],{"ruleId":"20","severity":1,"message":"21","line":17,"column":12,"nodeType":"22","messageId":"23","endLine":17,"endColumn":17},{"ruleId":"24","severity":1,"message":"25","line":45,"column":37,"nodeType":"26","messageId":"27","endLine":45,"endColumn":39},"no-unused-vars","'turns' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]